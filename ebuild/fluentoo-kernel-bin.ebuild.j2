# Copyright {{ year }} Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

EAPI=8

inherit kernel-build kernel-install toolchain-funcs unpacker

MY_P=linux-${PV%.*}

DESCRIPTION="Pre-built Linux kernel for Fluentoo"
HOMEPAGE="https://www.kernel.org"

S=${WORKDIR}/${MY_P}

KEYWORDS="-* arm64"
IUSE="debug initramfs"

BDEPEND="sys-kernel/gentoo-sources:${SLOT}"

QA_PREBUILT='*'

SRC_DIR="/usr/src/linux-${PV}-gentoo"

src_unpack() {
    mkdir -p "${WORKDIR}"/linux-$(ver_cut 1-2)
    cp -r -p "${SRC_DIR}"/. "${WORKDIR}"/${MY_P}/ || die "Could not copy sources from ${SRC_DIR}"

    default
}

src_prepare() {
	default
	cp "${FILESDIR}"/bcm2711_defconfig .config
	kernel-build_merge_configs
}

src_configure() {
	# force ld.bfd if we can find it easily
	local HOSTLD="$(tc-getBUILD_LD)"
	if type -P "${HOSTLD}.bfd" &>/dev/null; then
		HOSTLD+=.bfd
	fi
	local LD="$(tc-getLD)"
	if type -P "${LD}.bfd" &>/dev/null; then
		LD+=.bfd
	fi
	tc-export_build_env
	local makeargs=(
		V=1

		HOSTCC="$(tc-getBUILD_CC)"
		HOSTCXX="$(tc-getBUILD_CXX)"
		HOSTLD="${HOSTLD}"
		HOSTAR="$(tc-getBUILD_AR)"
		HOSTCFLAGS="${BUILD_CFLAGS}"
		HOSTLDFLAGS="${BUILD_LDFLAGS}"

		CROSS_COMPILE=${CHOST}-
		AS="$(tc-getAS)"
		CC="$(tc-getCC)"
		LD="${LD}"
		AR="$(tc-getAR)"
		NM="$(tc-getNM)"
		STRIP="$(tc-getSTRIP)"
		OBJCOPY="$(tc-getOBJCOPY)"
		OBJDUMP="$(tc-getOBJDUMP)"
		READELF="$(tc-getREADELF)"

		# we need to pass it to override colliding Gentoo envvar
		ARCH="$(tc-arch-kernel)"

		O="${WORKDIR}"/modprep
	)

	local kernel_dir="."
	local image="${kernel_dir}/$(dist-kernel_get_image_path)"

	mkdir modprep || die
	cp "${kernel_dir}/.config" modprep/ || die
	emake -C "${MY_P}" "${makeargs[@]}" modules_prepare
}

# Note that all emerge-specific flags from make.conf are also set.
# src_compile() {
# 	cd "${BUILDDIR}" | die "Could not change directory to ${BUILDDIR}"
# 	emake INSTALL_MOD_PATH="${T}" Image modules dtbs
# }

# We copy only the kernel, System.map and .config to /boot.
# There is NO INITRD here! It is generated by dracut in the postinst step if
# the "initramfs" USE flag is set.
# Then copy the modules.
# Note: The kernel sources are not required on the target system, so the various symlinks in /lib/modules/$version
#       that usually point to /usr/src/linux are not set here. Uncomment below to change this.
# src_install() {
# 		insinto /boot
# 		dodir /boot
#
# 		# TODO: adapt below according to RaspberryPI AARCH64
# 		newins "${BUILDDIR}/arch/x86/boot/bzImage" vmlinuz-${PV}-gentoo
# 		newins "${BUILDDIR}/.config" config-${PV}-gentoo
# 		newins "${BUILDDIR}/System.map" System.map-${PV}-gentoo
#
# 		rm -f "${T}/lib/modules/${PV}-gentoo/build"
# 		rm -f "${T}/lib/modules/${PV}-gentoo/source"
# #       ln -s ${SRC_DIR} ${T}/lib/modules/${PV}-gentoo/build
# #       ln -s ${SRC_DIR} ${T}/lib/modules/${PV}-gentoo/source
# 		dodir "/lib/modules/${PV}-gentoo"
# 		insinto "/lib/modules"
# 		doins -r "${T}/lib/modules/${PV}-gentoo"
# }
#
# # Generate grub config for new kernel and module maps.
# pkg_postinst() {
# 		if use initramfs ; then
# 				elog "Creating initramfs"
# 				dracut --hostonly --force --kver ${PV}-gentoo
# 		fi
# 		depmod -a ${PV}-gentoo
# }
